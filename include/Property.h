#pragma once

#include <map>
#include <vector>
#include <algorithm>
#include "EDSDK.h"
#include "EDSDKTypes.h"

//EdsError GetProperty(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt32> const& bodyID, EdsPropertyID propertyID);
EdsError GetProperty(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt64> const& bodyID, EdsPropertyID propertyID, std::map<EdsUInt32, const char*> prop_table);
//EdsError GetPropertyDesc(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt32> const& bodyID, EdsPropertyID propertyID);
EdsError GetPropertyDesc(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt64> const& bodyID, EdsPropertyID propertyID, std::map<EdsUInt32, const char*> prop_table);
//EdsError SetProperty(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt32> const& bodyID, EdsPropertyID propertyID, EdsVoid* data);
EdsError SetProperty(std::vector<EdsCameraRef> const& cameraArray, std::vector<EdsUInt64> const& bodyID, EdsPropertyID propertyID, EdsInt32 data, std::map<EdsUInt32, const char*> prop_table);

std::map<EdsUInt32, const char*> iso_table = {
{0x00, "Auto"},
{0x28, "6"},
{0x30, "12"},
{0x38, "25"},
{0x40, "50"},
{0x48, "100"},
{0x4b, "125"},
{0x4d, "160"},
{0x50, "200"},
{0x53, "250"},
{0x55, "320"},
{0x58, "400"},
{0x5b, "500"},
{0x5d, "640"},
{0x60, "800"},
{0x63, "1000"},
{0x65, "1250"},
{0x68, "1600"},
{0x6b, "2000"},
{0x6d, "2500"},
{0x70, "3200"},
{0x73, "4000"},
{0x75, "5000"},
{0x78, "6400"},
{0x7b, "8000"},
{0x7d, "10000"},
{0x80, "12800"},
{0x83, "16000"},
{0x85, "20000"},
{0x88, "25600"},
{0x8b, "32000"},
{0x8d, "40000"},
{0x90, "51200"},
{0x93, "64000"},
{0x95, "80000"},
{0x98, "102400"},
{0xa0, "204800"},
{0xa8, "409600"},
{0xb0, "819200"},
{0xffffffff, "unknown value"} };

std::map<EdsUInt32, const char*> tv_table = {
{0x04, "Auto"},
{0x0c, "Bulb"},
{0x10, "30''"},
{0x13, "25''"},
{0x14, "20''"},
{0x15, "20''"},
{0x18, "15''"},
{0x1B, "13''"},
{0x1C, "10''"},
{0x1D, "10''"},
{0x20, "8''"},
{0x23, "6''"},
{0x24, "6''"},
{0x25, "5''"},
{0x28, "4''"},
{0x2B, "3''2"},
{0x2C, "3''"},
{0x2D, "2''5"},
{0x30, "2''"},
{0x33, "1''6"},
{0x34, "1''5"},
{0x35, "1''3"},
{0x38, "1''"},
{0x3B, "0''8"},
{0x3C, "0''7"},
{0x3D, "0''6"},
{0x40, "0''5"},
{0x43, "0''4"},
{0x44, "0''3"},
{0x45, "0''3"},
{0x48, "4"},
{0x4B, "5"},
{0x4C, "6"},
{0x4D, "6"},
{0x50, "8"},
{0x53, "10"},
{0x54, "10"},
{0x55, "13"},
{0x58, "15"},
{0x5B, "20"},
{0x5C, "20"},
{0x5D, "25"},
{0x60, "30"},
{0x63, "40"},
{0x64, "45"},
{0x65, "50"},
{0x68, "60"},
{0x6B, "80"},
{0x6C, "90"},
{0x6D, "100"},
{0x70, "125"},
{0x73, "160"},
{0x74, "180"},
{0x75, "200"},
{0x78, "250"},
{0x7B, "320"},
{0x7C, "350"},
{0x7D, "400"},
{0x80, "500"},
{0x83, "640"},
{0x84, "750"},
{0x85, "800"},
{0x88, "1000"},
{0x8B, "1250"},
{0x8C, "1500"},
{0x8D, "1600"},
{0x90, "2000"},
{0x93, "2500"},
{0x94, "3000"},
{0x95, "3200"},
{0x98, "4000"},
{0x9B, "5000"},
{0x9C, "6000"},
{0x9D, "6400"},
{0xA0, "8000"},
{0xA3, "10000"},
{0xA5, "12800"},
{0xA8, "16000"},
{0xffffffff, "unknown value"} };

std::map<EdsUInt32, const char*> av_table = {
{0x00, ""},
{0x08, "1.0"},
{0x0B, "1.1"},
{0x0C, "1.2"},
{0x0D, "1.2"},
{0x10, "1.4"},
{0x13, "1.6"},
{0x14, "1.8"},
{0x15, "1.8"},
{0x18, "2.0"},
{0x1B, "2.2"},
{0x1C, "2.5"},
{0x1D, "2.5"},
{0x20, "2.8"},
{0x23, "3.2"},
{0x80, "3.3"},
{0x85, "3.4"},
{0x24, "3.5"},
{0x25, "3.5"},
{0x28, "4.0"},
{0x2B, "4.5"},
{0x2C, "4.5"},
{0x2D, "5.0"},
{0x30, "5.6"},
{0x33, "6.3"},
{0x34, "6.7"},
{0x35, "7.1"},
{0x38, "8.0"},
{0x3B, "9.0"},
{0x3C, "9.5"},
{0x3D, "10"},
{0x40, "11"},
{0x43, "13"},
{0x44, "13"},
{0x45, "14"},
{0x48, "16"},
{0x4B, "18"},
{0x4C, "19"},
{0x4D, "20"},
{0x50, "22"},
{0x53, "25"},
{0x54, "27"},
{0x55, "29"},
{0x58, "32"},
{0x5B, "36"},
{0x5C, "38"},
{0x5D, "40"},
{0x60, "45"},
{0x63, "51"},
{0x64, "54"},
{0x65, "57"},
{0x68, "64"},
{0x6B, "72"},
{0x6C, "76"},
{0x6D, "80"},
{0x70, "91"},
{0xFF, "Auto"},
{0xffffffff, "unknown value"} };

std::map<EdsUInt32, const char*> whitebalance_table = {
{0, "Auto: Ambience priority"},
{1, "Daylight"},
{2, "Cloudy"},
{3, "Tungsten light"},
{4, "White fluorescent light"},
{5, "Flash"},
{6, "Custom1"},
{8, "Shade"},
{9, "Color temp."},
{10, "Custom white balance PC-1"},
{11, "Custom white balance PC-2"},
{12, "Custom white balance PC-3"},
{15, "Custom2"},
{16, "Custom3"},
{17, "Underwater"},
{18, "Custom4"},
{19, "Custom5"},
{20, "Custom white balance PC-4"},
{21, "Custom white balance PC-5"},
{23, "Auto: White priority"} };

std::map<EdsUInt32, const char*> drivemode_table = {
{0x00, "Single shooting"},
{0x01, "Medium speed continuous"},
{0x04, "High speed continuous"},
{0x05, "Low speed continuous"},
{0x06, "Single Silent(Soft) shooting"},
{0x07, "Self-timer:Continuous"},
{0x10, "Self-timer 10 sec"},
{0x11, "Self-timer 2 sec"},
{0x12, "High speed continuous +"},
{0x13, "Silent single shooting"},
{0x14, "Silent(Soft) contin shooting"},
{0x15, "Silent HS continuous"},
{0x16, "Silent(Soft) LS continuous"} };

std::map<EdsUInt32, const char*> AEmode_table = {
{0, "P"},
{1, "Tv"},
{2, "Av"},
{3, "M"},
{55, "Fv"},
{4, "Bulb"},
{5, "A-DEP"},
{6, "DEP"},
{7, "C1"},
{8, "Lock"},
{9, "GreenMode"},
{10, "Night Portrait"},
{11, "Sports"},
{12, "Portrait"},
{13, "Landscape"},
{14, "Close-up"},
{15, "No Strobo"},
{16, "C2"},
{17, "C3"},
{19, "Creative Auto"},
{20, "Movies"},
{21, "Photo In Movie"},
{22, "Scene Intelligent Auto"},
{23, "Handheld Night Scene"},
{24, "HDR Backlight Control"},
{25, "SCN"},
{26, "Kids"},
{27, "Food"},
{28, "Candlelight"},
{29, "Creative filters"},
{30, "Grainy B/W"},
{31, "Soft focus"},
{32, "Toy camera effect"},
{33, "Fish-eye effect"},
{34, "Water painting effect"},
{35, "Miniature effect"},
{36, "HDR art standard"},
{37, "HDR art vivid"},
{38, "HDR art bold"},
{39, "HDR art embossed"},
{40, "Dream"},
{41, "Old Movies"},
{42, "Memory"},
{43, "Dramatic B&W"},
{44, "Miniature effect movie"},
{45, "Panning"},
{46, "Group Photo"},
{50, "Self Portrait"},
{51, "Plus Movie Auto"},
{52, "Smooth skin"},
{53, "Panorama"},
{54, "Silent Mode"},
{56, "Art bold effect"},
{57, "Fireworks"},
{58, "Star portrait"},
{59, "Star nightscape"},
{60, "Star trails"},
{61, "Star time-lapse movie"},
{62, "Background blur"},
{0xffffffff, "unknown value"} };